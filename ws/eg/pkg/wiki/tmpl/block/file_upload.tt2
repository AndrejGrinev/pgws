[% META
# Copyright (c) 2010, 2012 Tender.Pro http://tender.pro.
# This file is part of PGWS - Postgresql WebServices.
  description = 'Загрузка файлов'
%][%
  meta.head.upload = 1;

%]

<div id='upload_form_template' class='hide'>
  <div class='prepare'>
    <form method='POST'>
      <input type='hidden' name='id' value='[% doc_id; %]'>
      <input type='file' class='inputFile' name='name' >
      <input type='submit' class='hide' value='[% l('Отправить') %]'>
    </form>
  </div>
  <span class='label'></span>
  <div class='process hide'>
      <div class='progressbarDiv'>
        <div class='ui-progressbar-label'><span class='pb-percent'></span>%. [% l('Осталось') %]: <span class='pb-sec'></span> [% l('сек')%]</div>
      </div>
      <input type='button' class='btnReset' value='[% l('Отменить') %]'>
  </div>
  <span class='status'></span>
</div>

<div class="uploaded">
[%
  files = api('wiki.doc_file', id => doc_id);
  FOREACH f IN files;
    file_uri = uri(code => page.up_code _ '.file', id => doc_path, id1 => f.file_id, id2 => f.name);
    %]<div class='fileDiv'><a href="[% uri_mk(file_uri.req) %]">[% f.name %]</a> <a href='#' fileid='"[% f.file_id %]"' class='btnDelete'>[x]</a><div class='deleteStatusError'></div></div>[%
  END
%]
</div>
<div class="upload">
  <input type='button' class='add' value='[% l('Загрузить файл') %]'>
</div>
<script type="text/javascript">
//<![CDATA[

var deleteFileOptions = {
  action:     '/_wiki.doc_file_del.json',
  id:         [%doc_id%],
  prefix:     '[% req.prefix %]',
  onSuccess:  function(self, obj){
    $(obj).addClass('hide');
  },
  onError:    function(self, obj, mess){
    $(obj).find(self.options.classErrorMessage).text(mess);
  }
};

var onSuccess = function(container, response){
  if (response.success === "true") {
    var file = response.result.data;
    $('.uploaded').append('<div class=\'fileDiv\'><a href="[% view_pathname %]/file/' + file.file_id + '/' + file.name + '">' + file.name + '</a> <a href="#" fileid="' + file.file_id + '" class="btnDelete">[x]</a><div class="deleteStatusError"></div></div>')
    container.find('.status').text("[% l('Файл загружен') %]");
    $('.btnDelete').deleteFile(deleteFileOptions);
  } else {
    var error = response.result.error[0].message;
    container.find('.status').text(error);
  }
};

var onError = function(container, jqXHR, textStatus, errorThrown){
  if (jqXHR.status === 413){
    $(container).find('.status').text("[% l('Размер файла больше допустимого') %]");
  }
};

// ----------------------------------------------------------------------------
$(document).ready(function(){
  $('.upload').formFieldUpload({
   action:      '/upload/_wiki.doc_file_add.json'
  , template:   '#upload_form_template'
  , onSuccess:  onSuccess
  , onError:    onError
  });
  $('.btnDelete').deleteFile(deleteFileOptions);
});

//]]>
</script>
